extends Node

#
#var default_cube = "RRR" + \
#                   "RRR" + \
#                   "RRR" + \
#                "YYYGGGWWW" + \
#                "YYYGGGWWW" + \
#                "YYYGGGWWW" + \
#                   "OOO" + \
#                   "OOO" + \
#                   "OOO" + \
#                   "BBB" + \
#                   "BBB" + \
#                   "BBB"
#
#var colors = {
#    "R": Color.red,
#    "Y": Color.yellow,
#    "G": Color.green,
#    "W": Color.white,
#    "O": Color.orange,
#    "B": Color.blue
#   }
#
#var noop =  [ 0, 1, 2,
#              3, 4, 5,
#              6, 7, 8,
#     9,10,11,12,13,14,15,16,17,
#    18,19,20,21,22,23,24,25,26,
#    27,28,29,30,31,32,33,34,35,
#             36,37,38,
#             39,40,41,
#             42,43,44,
#             45,46,47,
#             48,49,50,
#             51,52,53]
#
#
#var rotation_descriptions = {
#        "topCW":
#            [ 6, 3, 0,
#              7, 4, 1,
#              8, 5, 2,
#    12,13,14,15,16,17,53,52,51,
#    18,19,20,21,22,23,24,25,26,
#    27,28,29,30,31,32,33,34,35,
#             36,37,38,
#             39,40,41,
#             42,43,44,
#             45,46,47,
#             48,49,50,
#             11,10, 9],
#        "topCCW":
#            [ 2, 5, 8,
#              1, 4, 7,
#              0, 3, 6,
#    53,52,51, 9,10,11,12,13,14,
#    18,19,20,21,22,23,24,25,26,
#    27,28,29,30,31,32,33,34,35,
#             36,37,38,
#             39,40,41,
#             42,43,44,
#             45,46,47,
#             48,49,50,
#             17,16,15],
#        "frontCW":
#            [ 0, 1, 2,
#              3, 4, 5,
#             29,20,11,
#     9,10,36,30,21,12, 6,16,17,
#    18,19,37,31,22,13, 7,25,26,
#    27,28,38,32,23,14, 8,34,35,
#             33,24,15,
#             39,40,41,
#             42,43,44,
#             45,46,47,
#             48,49,50,
#             51,52,53],
#        "frontCCW":
#            [ 0, 1, 2,
#              3, 4, 5,
#             15,24,33,
#     9,10, 8,14,23,32,38,16,17,
#    18,19, 7,13,22,31,37,25,26,
#    27,28, 6,12,21,30,36,34,35,
#             11,20,29,
#             39,40,41,
#             42,43,44,
#             45,46,47,
#             48,49,50,
#             51,52,53],
#        "leftCW":
#            [45, 1, 2,
#             48, 4, 5,
#             51, 7, 8,
#    27,18, 9, 0,13,14,15,16,17,
#    28,19,10, 3,22,23,24,25,26,
#    29,20,11, 6,31,32,33,34,35,
#             12,37,38,
#             21,40,41,
#             30,43,44,
#             36,46,47,
#             39,49,50,
#             42,52,53],
#        "leftCCW":
#            [12, 1, 2,
#             21, 4, 5,
#             30, 7, 8,
#    11,20,29,36,13,14,15,16,17,
#    10,19,28,39,22,23,24,25,26,
#     9,18,27,42,31,32,33,34,35,
#             45,37,38,
#             48,40,41,
#             51,43,44,
#              0,46,47,
#              3,49,50,
#              6,52,53],
#        "rightCW":
#            [ 0, 1,47,
#              3, 4,50,
#              6, 7,52,
#     9,10,11,12,13,38,33,24,15,
#    18,19,20,21,22,41,34,25,16,
#    27,28,29,30,31,44,35,26,17,
#             36,37,47,
#             39,40,50,
#             42,43,53,
#             45,46, 2,
#             48,49, 5,
#             51,52, 8],
#        "rightCCW":
#            [ 0, 1,47,
#              3, 4,50,
#              6, 7,53,
#     9,10,11,12,13, 2,17,27,35,
#    18,19,20,21,22, 5,16,25,34,
#    27,28,29,30,31, 8,15,24,33,
#             36,37,14,
#             39,40,23,
#             42,43,32,
#             45,46,38,
#             48,49,41,
#             51,52,44],
#        "backCW":
#            [ 0, 1, 2,
#              3, 4, 5,
#              6, 7, 8,
#     9,10,11,12,13,14,15,16,17,
#    18,19,20,21,22,23,24,25,26,
#    47,46,45,27,28,29,30,31,32,
#             42,39,36,
#             43,40,37,
#             44,41,38,
#             35,34,33,
#             48,49,50,
#             51,52,53],
#        "backCCW":
#            [ 0, 1, 2,
#              3, 4, 5,
#              6, 7, 8,
#     9,10,11,12,13,14,15,16,17,
#    18,19,20,21,22,23,24,25,26,
#    30,31,32,33,34,35,47,46,45,
#             38,41,44,
#             37,40,43,
#             36,39,42,
#             29,28,27,
#             48,49,50,
#             51,52,53],
#        "bottomCW":
#            [17,26,35,
#              3, 4, 5,
#              6, 7, 8,
#     2,10,11,12,13,14,15,16,44,
#     1,19,20,21,22,23,24,25,43,
#     0,28,29,30,31,32,33,34,42,
#             36,37,38,
#             39,40,41,
#              9,18,27,
#             51,48,45,
#             52,49,46,
#             53,50,47],
#        "bottomCCW":
#            [27,18, 9,
#              3, 4, 5,
#              6, 7, 8,
#    42,10,11,12,13,14,15,16, 0,
#    43,19,20,21,22,23,24,25, 1,
#    44,28,29,30,31,32,33,34, 2,
#             36,37,38,
#             39,40,41,
#             35,26,17,
#             47,50,53,
#             46,49,52,
#             45,48,51]
#   }
#
#func make_move(cube, move_name):
#    var return_val = ""
#    for i in rotation_descriptions[move_name]:
#        return_val += cube[i]
#    return return_val

# Original Cube Colors
#var colors = {
#    "R": Color.red,
#    "Y": Color.yellow,
#    "G": Color.green,
#    "W": Color.white,
#    "O": Color.orange,
#    "B": Color.blue
#   }

var colors = {
    "R": Color(0xffffff),
    "Y": Color(0xdddddd),
    "G": Color(0xbbbbbb),
    "W": Color(0x999999),
    "O": Color(0x777777),
    "B": Color(0x555555),
    0: Color(0x000000),
    1: Color(0x111111),
    2: Color(0x222222),
    3: Color(0x333333),
    4: Color(0x444444),
    5: Color(0x555555),
    6: Color(0x666666),
    7: Color(0x777777),
    8: Color(0x888888),
    9: Color(0x999999),
    10: Color(0xaaaaaa),
    11: Color(0xbbbbbb),
    12: Color(0xcccccc),
    13: Color(0xdddddd),
    14: Color(0xeeeeee),
    15: Color(0xffffff),
   }

var default_cube = "RRR" + \
                  "YBBBW" + \
                  "YBBBW" + \
                  "YBBBW" + \
                   "OOO" + \
                  "YOOOW" + \
                  "YOOOW" + \
                   "GGG"

var noop = [ 0, 1, 2,
          3, 4, 5, 6, 7,
          8, 9,10,11,12,
         13,14,15,16,17,
            18,19,20,
         21,22,23,24,25,
         26,27,28,29,30,
            31,32,33]

var descs = [
        [ 7,12,17,
       2, 6,11,16,20,
       1, 5,10,15,19,
       0, 4, 9,14,18,
          3, 8,13,
      21,22,23,24,25,
      26,27,28,29,30,
         31,32,33],
        [13, 8, 3,
      18,14, 9, 4, 0,
      19,15,10, 5, 1,
      20,16,11, 6, 2,
         17,12, 7,
      21,22,23,24,25,
      26,27,28,29,30,
         31,32,33],
        [ 0, 1, 2,
       3, 4, 5, 6, 7,
       8, 9,10,11,12,
      16,17,25,30,33,
         20,24,29,
      15,19,23,28,32,
      14,18,22,27,31,
         13,21,26],
        [ 0, 1, 2,
       3, 4, 5, 6, 7,
       8, 9,10,11,12,
      31,26,21,13,14,
         27,22,18,
      32,28,23,19,15,
      33,29,24,20,16,
         30,25,17]
   ]

func make_move_old(cube, move_id):
    var out = ""
    for i in descs[move_id]:
        out += cube[i]
    return out


var default_puzzle = [
     0,  1,  2,  3,
     4,  5,  6,  7,
     8,  9, 10, 11,
    12, 13, 14, 15]
    

func make_move(puzzle: Array, move_id: int):
    var index = puzzle.find(0)
    var ret = puzzle.duplicate()
    var x = index % 4
    var y = index / 4
    match move_id:
        #Up
        0:
            if y == 0:
                ret[index + 12] = 0
                ret[index + 8] = puzzle[index + 12]
                ret[index + 4] = puzzle[index + 8]
                ret[index] = puzzle[index + 4]
            else:
                ret[index] = puzzle[index - 4]
                ret[index - 4] = 0
        #Down
        1:
            if y == 3:
                ret[index - 12] = 0
                ret[index - 8] = puzzle[index - 12]
                ret[index - 4] = puzzle[index - 8]
                ret[index] = puzzle[index - 4]
            else:
                ret[index] = puzzle[index + 4]
                ret[index + 4] = 0
        #Left
        2:
            if x == 0:
                ret[index + 3] = 0
                ret[index + 2] = puzzle[index + 3]
                ret[index + 1] = puzzle[index + 2]
                ret[index] = puzzle[index + 1]
            else:
                ret[index] = puzzle[index - 1]
                ret[index - 1] = 0
        #Right
        3:
            if x == 3:
                ret[index - 3] = 0
                ret[index - 2] = puzzle[index - 3]
                ret[index - 1] = puzzle[index - 2]
                ret[index] = puzzle[index - 1]
            else:
                ret[index] = puzzle[index + 1]
                ret[index + 1] = 0
        _:
            printerr("Invalid move")
    return ret
